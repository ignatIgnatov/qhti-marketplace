server:
  port: 8081

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: ${CORS_ALLOWED_ORIGINS}
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
      routes:
        - id: auth-service
          uri: http://localhost:8082
          predicates:
            - Path=/auth/**
        - id: ad-service
          uri: http://localhost:8083
          predicates:
            - Path=/ads/**
        - id: admin-service
          uri: http://localhost:8084
          predicates:
            - Path=/admin/**
        # API docs routes за Swagger
        - id: auth-api-docs
          uri: http://localhost:8082
          predicates:
            - Path=/v3/api-docs/auth
          filters:
            - RewritePath=/v3/api-docs/auth, /v3/api-docs
        - id: ad-api-docs
          uri: http://localhost:8083
          predicates:
            - Path=/v3/api-docs/ad
          filters:
            - RewritePath=/v3/api-docs/ad, /v3/api-docs
        - id: admin-api-docs
          uri: http://localhost:8084
          predicates:
            - Path=/v3/api-docs/admin
          filters:
            - RewritePath=/v3/api-docs/admin, /v3/api-docs
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/microservice-platform

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    urls:
      - name: auth-service
        url: /v3/api-docs/auth
      - name: ad-service
        url: /v3/api-docs/ad
      - name: admin-service
        url: /v3/api-docs/admin

keycloak:
  auth-server-url: http://localhost:8080
  realm: microservice-platform
  resource: api-gateway-client
  public-client: false
  credentials:
    secret: gateway-secret-key-here

---
spring:
  config:
    activate:
      on-profile: docker
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: ${CORS_ALLOWED_ORIGINS}
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
      routes:
        - id: auth-service
          uri: http://auth-service:8082
          predicates:
            - Path=/auth/**
        - id: ad-service
          uri: http://ad-service:8083
          predicates:
            - Path=/ads/**
        - id: admin-service
          uri: http://admin-service:8084
          predicates:
            - Path=/admin/**
        # API docs routes за Docker
        - id: auth-api-docs
          uri: http://auth-service:8082
          predicates:
            - Path=/v3/api-docs/auth
          filters:
            - RewritePath=/v3/api-docs/auth, /v3/api-docs
        - id: ad-api-docs
          uri: http://ad-service:8083
          predicates:
            - Path=/v3/api-docs/ad
          filters:
            - RewritePath=/v3/api-docs/ad, /v3/api-docs
        - id: admin-api-docs
          uri: http://admin-service:8084
          predicates:
            - Path=/v3/api-docs/admin
          filters:
            - RewritePath=/v3/api-docs/admin, /v3/api-docs
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
    urls:
      - name: auth-service
        url: /v3/api-docs/auth
      - name: ad-service
        url: /v3/api-docs/ad
      - name: admin-service
        url: /v3/api-docs/admin
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    urls:
      - name: auth-service
        url: /v3/api-docs/auth
      - name: ad-service
        url: /v3/api-docs/ad
      - name: admin-service
        url: /v3/api-docs/admin

keycloak:
  auth-server-url: ${KEYCLOAK_URL}
  realm: ${KEYCLOAK_REALM}
  resource: ${KEYCLOAK_CLIENT_ID}
  public-client: false
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET}